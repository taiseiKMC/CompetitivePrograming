#include <cstdio>
#include <algorithm>
#include <iostream>
#include <stack>
#include <queue>
#include <vector>
#include <limits.h>
#include <math.h>
using namespace std;

typedef long long LL;
typedef pair<int, int> PII;

#define FOR(i,a,b) for(int i=(a);i<(b);++i)
#define REP(i,n)  FOR(i,0,n)
#define CLR(a) memset((a), 0 ,sizeof(a))

//
//  Union-Find Tree
//

int parent[1000000];
int rank[1000000];
void Init()
{
	REP(i,n)
	{
		parent[i]=i;
		rank[i]=0;
	}
}
int Find(int p)
{
	return rank[p] == 0 ? p : parent[p] = Find(p);
}
void Marge(int p,int q)
{
	p=Find(p);q=Find(q);
	if(p==q) return;
	if(rank[p] < rank[q])
		parent[p]=q;
	else if(rank[q] < rank[p])
		parent[q]=p;
	else
	{
		parent[q]=p;
		rank[p]++;
	}

}



int main()
{
    int n;
    scanf("%d", &n);
    
		printf("%d\n", n);
}
